services:
  # RABBITMQ STUFF
  rabbitmq:
    image: rabbitmq:management
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - "${RABBITMQ_PORT}:5672"
      - "${RABBITMQ_UI_PORT}:15672"
    volumes:
      - "rabbitmq_data:/var/lib/rabbitmq"
      - "rabbitmq_logs:/var/log/rabbitmq"
    restart: no

  # POSTGRES STUFF
  postgres:
    image: postgres:latest
    shm_size: 128mb
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - "postgres_data:/var/lib/postgresql/data"
    restart: no

  adminer:
    image: adminer:latest
    ports:
      - "${ADMINER_PORT}:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    depends_on:
      postgres:
        condition: service_started
    restart: no

  # GRAYLOG STUFF
  mongodb:
    image: mongo:5 # Pinning the version to 5 is important - `latest` caused problems :(
    volumes:
      - "mongodb_data:/data/db"
    networks:
      - graylog_network
    restart: no

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
    environment:
      - "http.host=0.0.0.0"
      - "transport.host=localhost"
      - "network.host=0.0.0.0"
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - "elasticsearch_data:/usr/share/elasticsearch/data"
    networks:
      - graylog_network
    restart: no

  graylog:
#    image: graylog/graylog:5.1
    image: graylog/graylog:6.1.10
    environment:
      GRAYLOG_HTTP_EXTERNAL_URI: "http://${GRAYLOG_HOST}:${GRAYLOG_UI_PORT}/"
      GRAYLOG_ELASTICSEARCH_HOSTS: "http://elasticsearch:9200"
      GRAYLOG_MONGODB_URI: "mongodb://mongodb:27017/graylog"
#      GRAYLOG_NODE_ID_FILE: "/usr/share/graylog/data/config/node-id"
      GRAYLOG_PASSWORD_SECRET: "${GRAYLOG_PASSWORD_SECRET:?Please configure GRAYLOG_PASSWORD_SECRET in the .env file}"
      GRAYLOG_ROOT_PASSWORD_SHA2: "${GRAYLOG_ROOT_PASSWORD_SHA2:?Please configure GRAYLOG_ROOT_PASSWORD_SHA2 in the .env file}"
#      GRAYLOG_HTTP_BIND_ADDRESS: "0.0.0.0:9000"
#      GRAYLOG_ELASTICSEARCH_VERSION: "7"
      GRAYLOG_ROOT_TIMEZONE: 'UTC'
    depends_on:
      elasticsearch:
        condition: service_started
      mongodb:
        condition: service_started
    ports:
      - "${GRAYLOG_UI_PORT}:9000/tcp"    # Server API and WebUI
      - "${GRAYLOG_UDP_PORT}:12201/udp"  # GELF UDP
      - "1514:1514/udp"    # Syslog
#      - "5044:5044/tcp"   # Beats
#      - "5140:5140/tcp"   # Syslog
#      - "5555:5555/tcp"   # RAW TCP
#      - "5555:5555/udp"   # RAW TCP
#      - "12201:12201/tcp" # GELF TCP
#      - "10000:10000/tcp" # Custom TCP port
#      - "10000:10000/udp" # Custom UDP port
#      - "13301:13301/tcp" # Forwarder data
#      - "13302:13302/tcp" # Forwarder config
    volumes:
      - "graylog_data:/usr/share/graylog/data/data"
      - "graylog_journal:/usr/share/graylog/data/journal"
    networks:
      - graylog_network
    restart: no

networks:
  graylog_network:
    driver: bridge
#    driver_opts:
#      # Ref: https://docs.docker.com/engine/network/drivers/bridge/#options
#      com.docker.network.bridge.enable_icc: "true"

# Note: use of docker volumes here is not out of choice - mapping directories
#   within the project's `./volumes` dir would have been preferable for portability
#   but caused issues with the mongo service.
volumes:
  rabbitmq_data:
  rabbitmq_logs:
  postgres_data:
  mongodb_data:
  elasticsearch_data:
  graylog_data:
  graylog_journal:

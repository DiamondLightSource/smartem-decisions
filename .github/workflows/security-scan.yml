name: Security Scan

on:
  # Called by CI for PR/push checks
  workflow_call:
  # Run security scan on schedule (weekly)
  schedule:
    - cron: '0 2 * * 1'  # Monday 2 AM UTC
  # Allow manual triggering
  workflow_dispatch:
  # Run on security-related file changes
  push:
    paths:
      - '.secrets.baseline'
      - '.pre-commit-config.yaml'
      - '.github/workflows/*security*'

jobs:
  secrets-scan:
    runs-on: ubuntu-latest
    name: ${{ github.event_name == 'schedule' && 'Comprehensive Security Scan' || 'Secrets Scanning' }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5
      with:
        fetch-depth: 0  # Full history for comprehensive scanning
    
    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: '3.12'
        cache: 'pip'
    
    - name: Install detect-secrets
      run: |
        python -m pip install --upgrade pip
        pip install detect-secrets
    
    # Fast scan for PR/CI contexts
    - name: Verify baseline exists
      if: github.event_name != 'schedule'
      run: |
        if [ ! -f .secrets.baseline ]; then
          echo "   .secrets.baseline not found!"
          echo "This likely means the pre-commit setup is incomplete."
          exit 1
        fi
        echo "   Found .secrets.baseline"
    
    - name: Run detect-secrets scan (CI mode)
      if: github.event_name != 'schedule'
      run: |
        echo "   Scanning for secrets..."
        detect-secrets scan \
          --baseline .secrets.baseline \
          --exclude-files '^docs/assets/' \
          --exclude-files '^build/' \
          --exclude-files '^dist/' \
          --exclude-files '.*\.lock$' \
          --exclude-files '.*migrations/versions/.*\.py$' \
          --force-use-all-plugins
    
    - name: Audit baseline for unaudited secrets
      if: github.event_name != 'schedule'
      run: |
        echo "🔐 Auditing secrets baseline..."
        
        # Check if baseline contains any unaudited secrets (null values)
        if grep -q '"is_secret": null' .secrets.baseline; then
          echo "   Found unaudited secrets in baseline!"
          echo "Please run: detect-secrets audit .secrets.baseline"
          echo "Review and mark each finding as true/false positive"
          detect-secrets audit .secrets.baseline --report
          exit 1
        else
          echo "   All secrets in baseline have been audited"
          detect-secrets audit .secrets.baseline --report
        fi
    
    - name: Check for new secrets in recent commits
      if: github.event_name == 'pull_request'
      run: |
        echo "🆕 Checking for new secrets in PR..."
        # Create temp directory and files for scanning
        mkdir -p /tmp/pr-scan
        git diff origin/main...HEAD --name-only | while read -r file; do
          if [ -f "$file" ]; then
            # Create directory structure and copy file
            mkdir -p "/tmp/pr-scan/$(dirname "$file")" 2>/dev/null || true
            cp "$file" "/tmp/pr-scan/$file" 2>/dev/null || true
          fi
        done
        
        # Scan the PR files if any exist
        if [ "$(ls -A /tmp/pr-scan 2>/dev/null)" ]; then
          echo "Scanning changed files in PR..."
          detect-secrets scan \
            --baseline .secrets.baseline \
            --exclude-files '^docs/assets/' \
            --exclude-files '^build/' \
            --exclude-files '^dist/' \
            --exclude-files '.*\.lock$' \
            --exclude-files '.*migrations/versions/.*\.py$' \
            --force-use-all-plugins \
            /tmp/pr-scan || echo "No secrets found in PR changes"
        else
          echo "No files to scan in this PR"
        fi
    
    # Comprehensive scan for scheduled runs
    - name: Full repository scan
      if: github.event_name == 'schedule'
      run: |
        echo "   Performing comprehensive repository scan..."
        detect-secrets scan \
          --exclude-files '^docs/assets/' \
          --exclude-files '^build/' \
          --exclude-files '^dist/' \
          --exclude-files '.*\.lock$' \
          --exclude-files '.*migrations/versions/.*\.py$' \
          --force-use-all-plugins
    
    - name: Historical git scan (recent commits)
      if: github.event_name == 'schedule'
      run: |
        echo "📜 Scanning recent git history for potential secrets..."
        # Get list of files changed in recent commits and scan them
        echo "Files changed in last 50 commits:"
        git log --name-only --pretty=format: --max-count=50 | sort -u | grep -v '^$' | head -20
        
        echo ""
        echo "Note: Git history scanning via detect-secrets --string has limitations."
        echo "For comprehensive history scanning, consider using tools like gitleaks or truffleHog."
        echo "Current implementation focuses on recent file changes rather than commit diffs."
    
    - name: Generate scan report
      if: github.event_name == 'schedule'
      run: |
        echo "   Generating security scan report..."
        echo "## Security Scan Report" > security_report.md
        echo "**Date:** $(date)" >> security_report.md
        echo "**Repository:** ${{ github.repository }}" >> security_report.md
        echo "**Commit:** ${{ github.sha }}" >> security_report.md
        echo "" >> security_report.md
        echo "### Scan Configuration" >> security_report.md
        echo "- Tool: detect-secrets" >> security_report.md
        echo "- Scanned: Full repository + last 100 commits" >> security_report.md
        echo "- Excluded: docs/assets, build, dist, lock files, migrations" >> security_report.md
    
    # Upload results
    - name: Upload scan results (CI mode)
      uses: actions/upload-artifact@v4
      if: failure() && github.event_name != 'schedule'
      with:
        name: secrets-scan-results
        path: |
          .secrets.baseline
        retention-days: 30
    
    - name: Upload scan report (Comprehensive mode)
      uses: actions/upload-artifact@v4
      if: github.event_name == 'schedule'
      with:
        name: security-scan-report
        path: |
          security_report.md
          .secrets.baseline
        retention-days: 90

  baseline-maintenance:
    runs-on: ubuntu-latest
    name: Baseline Maintenance
    if: github.event_name == 'schedule'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: '3.12'
    
    - name: Install detect-secrets
      run: |
        python -m pip install --upgrade pip
        pip install detect-secrets
    
    - name: Update baseline
      run: |
        echo "   Updating secrets baseline..."
        cp .secrets.baseline .secrets.baseline.backup
        detect-secrets scan \
          --exclude-files '^docs/assets/' \
          --exclude-files '^build/' \
          --exclude-files '^dist/' \
          --exclude-files '.*\.lock$' \
          --exclude-files '.*migrations/versions/.*\.py$' \
          --update .secrets.baseline
    
    - name: Check for changes
      id: check_changes
      run: |
        if ! diff -q .secrets.baseline .secrets.baseline.backup > /dev/null; then
          echo "changes=true" >> $GITHUB_OUTPUT
          echo "📝 Baseline has changes"
        else
          echo "changes=false" >> $GITHUB_OUTPUT
          echo "   No changes to baseline"
        fi
    
    - name: Create maintenance PR
      if: steps.check_changes.outputs.changes == 'true'
      uses: peter-evans/create-pull-request@v7
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "🔐 Update secrets baseline (automated maintenance)"
        title: "🔐 Automated secrets baseline maintenance"
        body: |
          This is an automated PR to update the secrets baseline.
          
          **Changes:**
          - Updated `.secrets.baseline` with new scan results
          - Scheduled maintenance run from security-scan workflow
          
          **Review required:**
          - Verify any new entries are legitimate false positives
          - Audit any removed entries to ensure they were properly addressed
          
          🤖 Generated by automated security maintenance workflow
        branch: chore/update-secrets-baseline
        delete-branch: true

# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class SmartPluginConfiguration(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, plugin_name: str=None, custom_plugin_selection: bool=None, timestamp: datetime=None):  # noqa: E501
        """SmartPluginConfiguration - a model defined in Swagger

        :param plugin_name: The plugin_name of this SmartPluginConfiguration.  # noqa: E501
        :type plugin_name: str
        :param custom_plugin_selection: The custom_plugin_selection of this SmartPluginConfiguration.  # noqa: E501
        :type custom_plugin_selection: bool
        :param timestamp: The timestamp of this SmartPluginConfiguration.  # noqa: E501
        :type timestamp: datetime
        """
        self.swagger_types = {
            'plugin_name': str,
            'custom_plugin_selection': bool,
            'timestamp': datetime
        }

        self.attribute_map = {
            'plugin_name': 'pluginName',
            'custom_plugin_selection': 'customPluginSelection',
            'timestamp': 'timestamp'
        }
        self._plugin_name = plugin_name
        self._custom_plugin_selection = custom_plugin_selection
        self._timestamp = timestamp

    @classmethod
    def from_dict(cls, dikt) -> 'SmartPluginConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SmartPluginConfiguration of this SmartPluginConfiguration.  # noqa: E501
        :rtype: SmartPluginConfiguration
        """
        return util.deserialize_model(dikt, cls)

    @property
    def plugin_name(self) -> str:
        """Gets the plugin_name of this SmartPluginConfiguration.


        :return: The plugin_name of this SmartPluginConfiguration.
        :rtype: str
        """
        return self._plugin_name

    @plugin_name.setter
    def plugin_name(self, plugin_name: str):
        """Sets the plugin_name of this SmartPluginConfiguration.


        :param plugin_name: The plugin_name of this SmartPluginConfiguration.
        :type plugin_name: str
        """

        self._plugin_name = plugin_name

    @property
    def custom_plugin_selection(self) -> bool:
        """Gets the custom_plugin_selection of this SmartPluginConfiguration.


        :return: The custom_plugin_selection of this SmartPluginConfiguration.
        :rtype: bool
        """
        return self._custom_plugin_selection

    @custom_plugin_selection.setter
    def custom_plugin_selection(self, custom_plugin_selection: bool):
        """Sets the custom_plugin_selection of this SmartPluginConfiguration.


        :param custom_plugin_selection: The custom_plugin_selection of this SmartPluginConfiguration.
        :type custom_plugin_selection: bool
        """

        self._custom_plugin_selection = custom_plugin_selection

    @property
    def timestamp(self) -> datetime:
        """Gets the timestamp of this SmartPluginConfiguration.


        :return: The timestamp of this SmartPluginConfiguration.
        :rtype: datetime
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp: datetime):
        """Sets the timestamp of this SmartPluginConfiguration.


        :param timestamp: The timestamp of this SmartPluginConfiguration.
        :type timestamp: datetime
        """

        self._timestamp = timestamp

# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class NameValueRecord(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: int=None, session_id: str=None, area_id: int=None, name: str=None, value: str=None, timestamp: datetime=None, set_by: str=None):  # noqa: E501
        """NameValueRecord - a model defined in Swagger

        :param id: The id of this NameValueRecord.  # noqa: E501
        :type id: int
        :param session_id: The session_id of this NameValueRecord.  # noqa: E501
        :type session_id: str
        :param area_id: The area_id of this NameValueRecord.  # noqa: E501
        :type area_id: int
        :param name: The name of this NameValueRecord.  # noqa: E501
        :type name: str
        :param value: The value of this NameValueRecord.  # noqa: E501
        :type value: str
        :param timestamp: The timestamp of this NameValueRecord.  # noqa: E501
        :type timestamp: datetime
        :param set_by: The set_by of this NameValueRecord.  # noqa: E501
        :type set_by: str
        """
        self.swagger_types = {
            'id': int,
            'session_id': str,
            'area_id': int,
            'name': str,
            'value': str,
            'timestamp': datetime,
            'set_by': str
        }

        self.attribute_map = {
            'id': 'id',
            'session_id': 'sessionId',
            'area_id': 'areaId',
            'name': 'name',
            'value': 'value',
            'timestamp': 'timestamp',
            'set_by': 'setBy'
        }
        self._id = id
        self._session_id = session_id
        self._area_id = area_id
        self._name = name
        self._value = value
        self._timestamp = timestamp
        self._set_by = set_by

    @classmethod
    def from_dict(cls, dikt) -> 'NameValueRecord':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The NameValueRecord of this NameValueRecord.  # noqa: E501
        :rtype: NameValueRecord
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this NameValueRecord.


        :return: The id of this NameValueRecord.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this NameValueRecord.


        :param id: The id of this NameValueRecord.
        :type id: int
        """

        self._id = id

    @property
    def session_id(self) -> str:
        """Gets the session_id of this NameValueRecord.


        :return: The session_id of this NameValueRecord.
        :rtype: str
        """
        return self._session_id

    @session_id.setter
    def session_id(self, session_id: str):
        """Sets the session_id of this NameValueRecord.


        :param session_id: The session_id of this NameValueRecord.
        :type session_id: str
        """

        self._session_id = session_id

    @property
    def area_id(self) -> int:
        """Gets the area_id of this NameValueRecord.


        :return: The area_id of this NameValueRecord.
        :rtype: int
        """
        return self._area_id

    @area_id.setter
    def area_id(self, area_id: int):
        """Sets the area_id of this NameValueRecord.


        :param area_id: The area_id of this NameValueRecord.
        :type area_id: int
        """

        self._area_id = area_id

    @property
    def name(self) -> str:
        """Gets the name of this NameValueRecord.


        :return: The name of this NameValueRecord.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this NameValueRecord.


        :param name: The name of this NameValueRecord.
        :type name: str
        """

        self._name = name

    @property
    def value(self) -> str:
        """Gets the value of this NameValueRecord.


        :return: The value of this NameValueRecord.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value: str):
        """Sets the value of this NameValueRecord.


        :param value: The value of this NameValueRecord.
        :type value: str
        """

        self._value = value

    @property
    def timestamp(self) -> datetime:
        """Gets the timestamp of this NameValueRecord.


        :return: The timestamp of this NameValueRecord.
        :rtype: datetime
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp: datetime):
        """Sets the timestamp of this NameValueRecord.


        :param timestamp: The timestamp of this NameValueRecord.
        :type timestamp: datetime
        """

        self._timestamp = timestamp

    @property
    def set_by(self) -> str:
        """Gets the set_by of this NameValueRecord.


        :return: The set_by of this NameValueRecord.
        :rtype: str
        """
        return self._set_by

    @set_by.setter
    def set_by(self, set_by: str):
        """Sets the set_by of this NameValueRecord.


        :param set_by: The set_by of this NameValueRecord.
        :type set_by: str
        """

        self._set_by = set_by

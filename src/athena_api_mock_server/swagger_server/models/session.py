# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.grid_type import GridType  # noqa: F401,E501
from swagger_server import util


class Session(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, session_id: str=None, session_name: str=None, athena_id: str=None, timestamp: datetime=None, grid_type: GridType=None):  # noqa: E501
        """Session - a model defined in Swagger

        :param session_id: The session_id of this Session.  # noqa: E501
        :type session_id: str
        :param session_name: The session_name of this Session.  # noqa: E501
        :type session_name: str
        :param athena_id: The athena_id of this Session.  # noqa: E501
        :type athena_id: str
        :param timestamp: The timestamp of this Session.  # noqa: E501
        :type timestamp: datetime
        :param grid_type: The grid_type of this Session.  # noqa: E501
        :type grid_type: GridType
        """
        self.swagger_types = {
            'session_id': str,
            'session_name': str,
            'athena_id': str,
            'timestamp': datetime,
            'grid_type': GridType
        }

        self.attribute_map = {
            'session_id': 'sessionId',
            'session_name': 'sessionName',
            'athena_id': 'athenaId',
            'timestamp': 'timestamp',
            'grid_type': 'gridType'
        }
        self._session_id = session_id
        self._session_name = session_name
        self._athena_id = athena_id
        self._timestamp = timestamp
        self._grid_type = grid_type

    @classmethod
    def from_dict(cls, dikt) -> 'Session':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Session of this Session.  # noqa: E501
        :rtype: Session
        """
        return util.deserialize_model(dikt, cls)

    @property
    def session_id(self) -> str:
        """Gets the session_id of this Session.


        :return: The session_id of this Session.
        :rtype: str
        """
        return self._session_id

    @session_id.setter
    def session_id(self, session_id: str):
        """Sets the session_id of this Session.


        :param session_id: The session_id of this Session.
        :type session_id: str
        """

        self._session_id = session_id

    @property
    def session_name(self) -> str:
        """Gets the session_name of this Session.


        :return: The session_name of this Session.
        :rtype: str
        """
        return self._session_name

    @session_name.setter
    def session_name(self, session_name: str):
        """Sets the session_name of this Session.


        :param session_name: The session_name of this Session.
        :type session_name: str
        """

        self._session_name = session_name

    @property
    def athena_id(self) -> str:
        """Gets the athena_id of this Session.


        :return: The athena_id of this Session.
        :rtype: str
        """
        return self._athena_id

    @athena_id.setter
    def athena_id(self, athena_id: str):
        """Sets the athena_id of this Session.


        :param athena_id: The athena_id of this Session.
        :type athena_id: str
        """

        self._athena_id = athena_id

    @property
    def timestamp(self) -> datetime:
        """Gets the timestamp of this Session.


        :return: The timestamp of this Session.
        :rtype: datetime
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp: datetime):
        """Sets the timestamp of this Session.


        :param timestamp: The timestamp of this Session.
        :type timestamp: datetime
        """

        self._timestamp = timestamp

    @property
    def grid_type(self) -> GridType:
        """Gets the grid_type of this Session.


        :return: The grid_type of this Session.
        :rtype: GridType
        """
        return self._grid_type

    @grid_type.setter
    def grid_type(self, grid_type: GridType):
        """Sets the grid_type of this Session.


        :param grid_type: The grid_type of this Session.
        :type grid_type: GridType
        """

        self._grid_type = grid_type

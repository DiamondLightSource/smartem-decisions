# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.area_type import AreaType  # noqa: F401,E501
from swagger_server import util


class Area(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: int=None, session_id: str=None, area_type: AreaType=None, parent_id: int=None):  # noqa: E501
        """Area - a model defined in Swagger

        :param id: The id of this Area.  # noqa: E501
        :type id: int
        :param session_id: The session_id of this Area.  # noqa: E501
        :type session_id: str
        :param area_type: The area_type of this Area.  # noqa: E501
        :type area_type: AreaType
        :param parent_id: The parent_id of this Area.  # noqa: E501
        :type parent_id: int
        """
        self.swagger_types = {
            'id': int,
            'session_id': str,
            'area_type': AreaType,
            'parent_id': int
        }

        self.attribute_map = {
            'id': 'id',
            'session_id': 'sessionId',
            'area_type': 'areaType',
            'parent_id': 'parentId'
        }
        self._id = id
        self._session_id = session_id
        self._area_type = area_type
        self._parent_id = parent_id

    @classmethod
    def from_dict(cls, dikt) -> 'Area':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Area of this Area.  # noqa: E501
        :rtype: Area
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this Area.


        :return: The id of this Area.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Area.


        :param id: The id of this Area.
        :type id: int
        """

        self._id = id

    @property
    def session_id(self) -> str:
        """Gets the session_id of this Area.


        :return: The session_id of this Area.
        :rtype: str
        """
        return self._session_id

    @session_id.setter
    def session_id(self, session_id: str):
        """Sets the session_id of this Area.


        :param session_id: The session_id of this Area.
        :type session_id: str
        """

        self._session_id = session_id

    @property
    def area_type(self) -> AreaType:
        """Gets the area_type of this Area.


        :return: The area_type of this Area.
        :rtype: AreaType
        """
        return self._area_type

    @area_type.setter
    def area_type(self, area_type: AreaType):
        """Sets the area_type of this Area.


        :param area_type: The area_type of this Area.
        :type area_type: AreaType
        """

        self._area_type = area_type

    @property
    def parent_id(self) -> int:
        """Gets the parent_id of this Area.


        :return: The parent_id of this Area.
        :rtype: int
        """
        return self._parent_id

    @parent_id.setter
    def parent_id(self, parent_id: int):
        """Sets the parent_id of this Area.


        :param parent_id: The parent_id of this Area.
        :type parent_id: int
        """

        self._parent_id = parent_id

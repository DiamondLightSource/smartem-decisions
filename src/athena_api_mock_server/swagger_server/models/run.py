# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Run(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, session_id: str=None, run_number: int=None, start_time: datetime=None, stop_time: datetime=None, stop_reason: str=None):  # noqa: E501
        """Run - a model defined in Swagger

        :param session_id: The session_id of this Run.  # noqa: E501
        :type session_id: str
        :param run_number: The run_number of this Run.  # noqa: E501
        :type run_number: int
        :param start_time: The start_time of this Run.  # noqa: E501
        :type start_time: datetime
        :param stop_time: The stop_time of this Run.  # noqa: E501
        :type stop_time: datetime
        :param stop_reason: The stop_reason of this Run.  # noqa: E501
        :type stop_reason: str
        """
        self.swagger_types = {
            'session_id': str,
            'run_number': int,
            'start_time': datetime,
            'stop_time': datetime,
            'stop_reason': str
        }

        self.attribute_map = {
            'session_id': 'sessionId',
            'run_number': 'runNumber',
            'start_time': 'startTime',
            'stop_time': 'stopTime',
            'stop_reason': 'stopReason'
        }
        self._session_id = session_id
        self._run_number = run_number
        self._start_time = start_time
        self._stop_time = stop_time
        self._stop_reason = stop_reason

    @classmethod
    def from_dict(cls, dikt) -> 'Run':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Run of this Run.  # noqa: E501
        :rtype: Run
        """
        return util.deserialize_model(dikt, cls)

    @property
    def session_id(self) -> str:
        """Gets the session_id of this Run.


        :return: The session_id of this Run.
        :rtype: str
        """
        return self._session_id

    @session_id.setter
    def session_id(self, session_id: str):
        """Sets the session_id of this Run.


        :param session_id: The session_id of this Run.
        :type session_id: str
        """

        self._session_id = session_id

    @property
    def run_number(self) -> int:
        """Gets the run_number of this Run.


        :return: The run_number of this Run.
        :rtype: int
        """
        return self._run_number

    @run_number.setter
    def run_number(self, run_number: int):
        """Sets the run_number of this Run.


        :param run_number: The run_number of this Run.
        :type run_number: int
        """

        self._run_number = run_number

    @property
    def start_time(self) -> datetime:
        """Gets the start_time of this Run.


        :return: The start_time of this Run.
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time: datetime):
        """Sets the start_time of this Run.


        :param start_time: The start_time of this Run.
        :type start_time: datetime
        """

        self._start_time = start_time

    @property
    def stop_time(self) -> datetime:
        """Gets the stop_time of this Run.


        :return: The stop_time of this Run.
        :rtype: datetime
        """
        return self._stop_time

    @stop_time.setter
    def stop_time(self, stop_time: datetime):
        """Sets the stop_time of this Run.


        :param stop_time: The stop_time of this Run.
        :type stop_time: datetime
        """

        self._stop_time = stop_time

    @property
    def stop_reason(self) -> str:
        """Gets the stop_reason of this Run.


        :return: The stop_reason of this Run.
        :rtype: str
        """
        return self._stop_reason

    @stop_reason.setter
    def stop_reason(self, stop_reason: str):
        """Sets the stop_reason of this Run.


        :param stop_reason: The stop_reason of this Run.
        :type stop_reason: str
        """

        self._stop_reason = stop_reason

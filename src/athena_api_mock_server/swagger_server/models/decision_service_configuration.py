# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.smart_plugin_configuration import SmartPluginConfiguration  # noqa: F401,E501
from swagger_server import util


class DecisionServiceConfiguration(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: str=None, smart_plugin_configurations: List[SmartPluginConfiguration]=None, timestamp: datetime=None):  # noqa: E501
        """DecisionServiceConfiguration - a model defined in Swagger

        :param id: The id of this DecisionServiceConfiguration.  # noqa: E501
        :type id: str
        :param smart_plugin_configurations: The smart_plugin_configurations of this DecisionServiceConfiguration.  # noqa: E501
        :type smart_plugin_configurations: List[SmartPluginConfiguration]
        :param timestamp: The timestamp of this DecisionServiceConfiguration.  # noqa: E501
        :type timestamp: datetime
        """
        self.swagger_types = {
            'id': str,
            'smart_plugin_configurations': List[SmartPluginConfiguration],
            'timestamp': datetime
        }

        self.attribute_map = {
            'id': 'id',
            'smart_plugin_configurations': 'smartPluginConfigurations',
            'timestamp': 'timestamp'
        }
        self._id = id
        self._smart_plugin_configurations = smart_plugin_configurations
        self._timestamp = timestamp

    @classmethod
    def from_dict(cls, dikt) -> 'DecisionServiceConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DecisionServiceConfiguration of this DecisionServiceConfiguration.  # noqa: E501
        :rtype: DecisionServiceConfiguration
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this DecisionServiceConfiguration.


        :return: The id of this DecisionServiceConfiguration.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this DecisionServiceConfiguration.


        :param id: The id of this DecisionServiceConfiguration.
        :type id: str
        """

        self._id = id

    @property
    def smart_plugin_configurations(self) -> List[SmartPluginConfiguration]:
        """Gets the smart_plugin_configurations of this DecisionServiceConfiguration.


        :return: The smart_plugin_configurations of this DecisionServiceConfiguration.
        :rtype: List[SmartPluginConfiguration]
        """
        return self._smart_plugin_configurations

    @smart_plugin_configurations.setter
    def smart_plugin_configurations(self, smart_plugin_configurations: List[SmartPluginConfiguration]):
        """Sets the smart_plugin_configurations of this DecisionServiceConfiguration.


        :param smart_plugin_configurations: The smart_plugin_configurations of this DecisionServiceConfiguration.
        :type smart_plugin_configurations: List[SmartPluginConfiguration]
        """

        self._smart_plugin_configurations = smart_plugin_configurations

    @property
    def timestamp(self) -> datetime:
        """Gets the timestamp of this DecisionServiceConfiguration.


        :return: The timestamp of this DecisionServiceConfiguration.
        :rtype: datetime
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp: datetime):
        """Sets the timestamp of this DecisionServiceConfiguration.


        :param timestamp: The timestamp of this DecisionServiceConfiguration.
        :type timestamp: datetime
        """

        self._timestamp = timestamp
